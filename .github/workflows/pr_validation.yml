name: Build and Test Affected Applications

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
    paths:
      - 'src/**'

jobs:
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      core_changed: ${{ steps.filter.outputs.core_changed }}
      appA_changed: ${{ steps.filter.outputs.appA }}
      appb_changed: ${{ steps.filter.outputs.appB_changed }}
      # Repeat for other apps as needed
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            core:
              - 'src/Test/Core/**'
            appA:
              - 'src/Test/AppA/**'
            appB:
              - 'src/Test/AppB/**'
            # Repeat for other apps as needed

  build-and-test-core:
    needs: changed-files
    if: needs.changed-files.outputs.core_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.101' # Specify your .NET version
      - name: Build and Test Core
        run: |
          cd src\Test\Core\Test.Core
          dotnet build
          dotnet test

  build-and-test-appA:
    needs: changed-files
    if: >-
      needs.changed-files.outputs.core_changed == 'true' ||
      needs.changed-files.outputs.appA_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.101' # Adjust .NET version as needed
      
      - name: Build and Test AppA
        run: |
          cd src/Test/AppA/Test.Api.App.A
          dotnet build
          cd ../tests/Test.Api.App.A.Tests
          dotnet test

      - name: Generate Release Notes
        run: |
          # Initialize release notes variable
          RELEASE_NOTES=""

          APPA_NOTES=$(git log --pretty=format:"- %s" origin/main..HEAD -- src/Test/AppA/)
          RELEASE_NOTES+="## AppA Changes\n$APPA_NOTES\n\n"

          # Check if release notes were generated
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES="No significant changes detected."
          fi

          # Set the release notes as an output variable
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$RELEASE_NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        shell: bash

      # Example step that uses the generated release notes, such as appending them to CHANGELOG.md
      - name: Append Release Notes to CHANGELOG.md for AppA
        if: needs.changed-files.outputs.appA_changed == 'true'
        run: |
          FILE="./src/Test/AppA/CHANGELOG.md"
          echo -e "## Release Notes - $(date +'%Y-%m-%d')\n\n${{ env.RELEASE_NOTES }}\n\n$(cat $FILE)" > $FILE

  build-and-test-appB:
    needs: changed-files
    if: >-
      needs.changed-files.outputs.core_changed == 'true' ||
      needs.changed-files.outputs.appB_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0.101' # Adjust .NET version as needed
      - name: Build and Test AppB
        run: |
          cd src/Test/AppB/Test.Api.App.B
          dotnet build
          dotnet test
